{"version":3,"sources":["lineGraph.js"],"names":["margin","top","right","bottom","left","width","height","x","d3","scaleLinear","range","y","valueline","line","d","age","length","svg","select","append","attr","csvFile","require","csv","then","data","dataByRaceAndAge","nest","key","race","rollup","v","entries","console","log","domain","max","getMaxValue","call","axisBottom","axisLeft","maxValue","values","value","i","j","Math"],"mappings":"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","file":"lineGraph.9206d848.js","sourceRoot":"../src","sourcesContent":["// set the dimensions and margins of the graph\nvar margin = {top: 20, right: 20, bottom: 30, left: 50},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\n// set the ranges\nvar x = d3.scaleLinear().range([0, width]);\nvar y = d3.scaleLinear().range([height, 0]);\n\n// define the line\nvar valueline = d3.line()\n    .x(function(d) { return x(d.age); })\n    .y(function(d) { return y(d.length); });\n\n// append the svg obgect to the body of the page\n// appends a 'group' element to 'svg'\n// moves the 'group' element to the top left margin\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\",\n          \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// Get the data\nconst csvFile = require(\"./fullData.csv\");\nd3.csv(csvFile, function(d) {\n    // format the data\n    d.age = +d.age;\n    return d;\n  }).then(function(data){\n\n    var dataByRaceAndAge = d3.nest()\n      .key(function(d) { return d.race; })\n      .key(function(d) { return d.age; })\n      .rollup(function(v) { return v.length; })\n      .entries(data);\n\n    // dataByRaceAndAge = dataByRaceAndAge.sort(function(d) { return d3.ascending(d.values.key)});\n\n    console.log(dataByRaceAndAge);\n\n    // Scale the range of the data\n    x.domain([0, d3.max(data, function(d) { return d.age; })]);\n    y.domain([0, getMaxValue(dataByRaceAndAge)]).range([height, 10]);\n\n    // // Add the valueline path.\n    // svg.append(\"path\")\n    //     .data([groupedData])\n    //     .attr(\"class\", \"line\")\n    //     .attr(\"d\", valueline);\n    //\n    // Add the X Axis\n    svg.append(\"g\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(d3.axisBottom(x));\n\n    // Add the Y Axis\n    svg.append(\"g\")\n        .call(d3.axisLeft(y));\n\n  })\n\n  function getMaxValue(d) {\n      var maxValue = d[0].values[0].value;\n      for (let i = 0; i < d.length; i++) {\n        for (let j = 0; j < d[i].length; j++) {\n          maxValue = Math.max(maxValue, d[i].values[j].value);\n        }\n      }\n      return maxValue;\n  }\n"]}